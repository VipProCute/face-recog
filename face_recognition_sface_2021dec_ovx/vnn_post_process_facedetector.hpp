/****************************************************************************
*   Generated by ACUITY 6.21.1
*   Match ovxlib 1.1.30
*
*   Neural Network appliction post-process header file
****************************************************************************/
#ifndef _VNN_POST_PROCESS_FACE_DETECTOR_H_
#define _VNN_POST_PROCESS_FACE_DETECTOR_H_

// extern const int FRC_input_size;
// extern const int FRC_feature_size;
// extern const float OPT_thrshold;
// extern std::string dirFile;
// extern std::string idFile;
// extern std::string dataFile;

#define MAX_OBJECT_NUM 2000
#define IMAGE_WIDTH 640
#define IMAGE_HEIGHT 640

#include <opencv2/opencv.hpp>

struct FaceObject {
    cv::Rect rect;
    float score;
    std::vector<float> landmarks;
    std::string name;
    float threshold;
};

struct Anchor {
    float cx, cy, w, h;
};

struct BoundingBox {
    float x, y, w, h;
    BoundingBox(float x, float y, float w, float h) : x(x), y(y), w(w), h(h) {}
    BoundingBox() : x(0), y(0), w(0), h(0) {}    
};

typedef struct Object_s {
    cv::Rect rect;
    int label;
    float prob;
}Object;

typedef struct Objects_s {
    Object obj[MAX_OBJECT_NUM];
    int num;
}Objects;

struct Prediction {
    float c_x, c_y, w, h;
};

typedef struct Confidence {
    float score;
} Confidence;

typedef struct Landmark {
    std::vector<cv::Point2f> points;
} Landmark;

vsi_status vnn_PostProcessFacedetector3Uint8(vsi_nn_graph_t *graph, std::vector<FaceObject>& faces);
// vsi_status vnn_PostProcessResnet34Fp16(vsi_nn_graph_t *graph,
//                                         cv::Mat &original_image,
//                                         FaceObject& face,
//                                         const std::vector<std::vector<float>>& itriDataDataset,
//                                         const std::vector<float>& featureNormList,
//                                         const std::vector<std::string>& names);                                         

#endif
